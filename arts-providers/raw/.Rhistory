setwd("~/Desktop/arts-vibrancy-index")
setwd("~/Desktop/arts-vibrancy-index/arts-providers")
bp<-read.csv(BP_2004.csv)
bp<-read.csv("BP_2004.csv")
zip<-read.csv("zipcodes.csv")
View(bp)
View(zip)
# import csv
bp<-read.csv("BP_2004.csv", header = FALSE)
zip<-read.csv("zipcodes.csv", header = FALSE)
# import csv
bp<-read.csv("BP_2004.csv")
# remove rows with non-NYC zip codes from business pattern data
bp_nyc<-bp[bp$GEO.id2 %in% zip$V1,]
View(bp_nyc)
install.packages("tidyr")
install.packages("dplyr")
View(bp_nyc)
spread(bp_nyc, EMPSZES.id, ESTAB)
# load packages
library(tidyr)
spread(bp_nyc, EMPSZES.id, ESTAB)
bp_new<-spread(bp_nyc, EMPSZES.id, ESTAB)
View(bp_new)
bp_nyc<-bp[,c(2,5,6,8,9)]
bp_nyc<-bp_nyc[,c(2,5,6,8,9)]
# import business pattern data
bp<-read.csv("BP_2004.csv")
# remove rows with non-NYC zip codes from business pattern data
bp_nyc<-bp[bp$GEO.id2 %in% zip$V1,]
bp_nyc<-bp_nyc[,c(2,5,6,8,9)]
View(bp)
# remove rows with non-NYC zip codes from business pattern data
bp_nyc<-bp[bp$GEO.id2 %in% zip$V1,]
bp_nyc<-bp_nyc[,c(2,5,8,9)]
# remove rows with non-NYC zip codes from business pattern data
bp_nyc<-bp[bp$GEO.id2 %in% zip$V1,]
bp_nyc<-bp_nyc[,c(2,5,6,8,9)]
bp_new<-spread(bp_nyc, EMPSZES.id, ESTAB)
install.packages("plyr")
library(plyr)
# rename columns
rename(bp_new, c("GEO.id2"="zip","NAICS.display-label"="industry","YEAR.id"="year",
"001"="all","212"="1_4","220"="5_9","230"="10_19","241"="20_49",
"242"="50_99","251"="100_249","252"="250_499","254"="500_999",
"260"="1000_more","262"="1000_1499","263"="1500_2499",
"271"="2500_4999","273"="5000_more"))
# rename columns
bp_new <- rename(bp_new, c("GEO.id2"="zip","NAICS.display-label"="industry","YEAR.id"="year",
"001"="all","212"="1_4","220"="5_9","230"="10_19","241"="20_49",
"242"="50_99","251"="100_249","252"="250_499","254"="500_999",
"260"="1000_more","262"="1000_1499","263"="1500_2499",
"271"="2500_4999","273"="5000_more"))
# import business pattern data
bp <- read.csv("BP_2004.csv")
# remove rows with non-NYC zip codes from business pattern data
bp_nyc <- bp[bp$GEO.id2 %in% zip$V1,]
# remove non-relevant columns
bp_nyc <- bp_nyc[,c(2,5,6,8,9)]
# convert rows to columns
bp_new <- spread(bp_nyc, EMPSZES.id, ESTAB)
# rename columns
bp_new <- rename(bp_new, c("GEO.id2"="zip","NAICS.display.label"="industry","YEAR.id"="year",
"001"="all","212"="1_4","220"="5_9","230"="10_19","241"="20_49",
"242"="50_99","251"="100_249","252"="250_499","254"="500_999",
"260"="1000_more","262"="1000_1499","263"="1500_2499",
"271"="2500_4999","273"="5000_more"))
dataFiles <- lapply(Sys.glob("BP_*.csv"), read.csv)
View(dataFiles)
View(dataFiles)
# import business pattern data
bp <- read.csv("BP_2004.csv")
# remove rows with non-NYC zip codes and non-relevant columns
bp_nyc <- bp[bp$GEO.id2 %in% zip$V1,c(2,5,6,8,9)]
Reduce(merge,dataFiles)
a<-Reduce(merge,dataFiles)
View(a)
# set working directory and import NYC zip codes
setwd("~/Desktop/arts-vibrancy-index/arts-providers/raw")
# set working directory and import NYC zip codes
setwd("~/Desktop/arts-vibrancy-index/arts-providers")
df <- do.call(rbind.data.frame, dataFiles)
View(df)
setwd("~/Desktop/arts-vibrancy-index/arts-providers/raw")
dataFiles <- lapply(Sys.glob("BP_*.csv"), read.csv)
df <- do.call(rbind.data.frame, dataFiles)
df <- df[df$GEO.id2 %in% zip$V1,]
View(df)
setwd("~/Desktop/arts-vibrancy-index/arts-providers/raw")
df <- lapply(Sys.glob("BP_*.csv"), read.csv)
df <- do.call(rbind.data.frame, df)
# remove rows with non-NYC zip codes and keep only relevant columns
df <- df[df$GEO.id2 %in% zip$V1, c(2,5,6,8,9)]
View(df)
View(df)
# convert rows to columns
df <- spread(df, EMPSZES.id, ESTAB)
# rename columns
bp_new <- rename(bp_new, c("GEO.id2"="zip","NAICS.display.label"="industry","YEAR.id"="year",
"001"="all","212"="1_4","220"="5_9","230"="10_19","241"="20_49",
"242"="50_99","251"="100_249","252"="250_499","254"="500_999",
"260"="1000_more","262"="1000_1499","263"="1500_2499",
"271"="2500_4999","273"="5000_more"))
# rename columns
df <- rename(df, c("GEO.id2"="zip","NAICS.display.label"="industry","YEAR.id"="year",
"001"="all","212"="1_4","220"="5_9","230"="10_19","241"="20_49",
"242"="50_99","251"="100_249","252"="250_499","254"="500_999",
"260"="1000_more","262"="1000_1499","263"="1500_2499",
"271"="2500_4999","273"="5000_more"))
# set working directory
setwd("~/Desktop/arts-vibrancy-index/arts-providers/raw")
# load packages
library(tidyr)
library(plyr)
# import NYC zip code file
zip <- read.csv("zipcodes.csv", header = FALSE)
# import all business pattern data files
df <- lapply(Sys.glob("BP_*.csv"), read.csv)
# merge into single file
df <- do.call(rbind.data.frame, df)
# remove rows with non-NYC zip codes and keep only relevant columns
df <- df[df$GEO.id2 %in% zip$V1, c(2,5,6,8,9)]
# convert rows to columns
df <- spread(df, EMPSZES.id, ESTAB)
# rename columns
df <- rename(df, c("GEO.id2"="zip","NAICS.display.label"="industry","YEAR.id"="year",
"001"="all","212"="1_4","220"="5_9","230"="10_19","241"="20_49",
"242"="50_99","251"="100_249","252"="250_499","254"="500_999",
"260"="1000_more","262"="1000_1499","263"="1500_2499",
"271"="2500_4999","273"="5000_more"))
View(df)
View(zip)
stringsAsFactors = FALSE
# import NYC zip code file
zip <- read.csv("zipcodes.csv", header = FALSE)
# import all business pattern data files
df <- lapply(Sys.glob("BP_*.csv"), read.csv)
# merge into single file
df <- do.call(rbind.data.frame, df)
# remove rows with non-NYC zip codes and keep only relevant columns
df <- df[df$GEO.id2 %in% zip$V1, c(2,5,6,8,9)]
# convert rows to columns
df <- spread(df, EMPSZES.id, ESTAB)
# rename columns
df <- rename(df, c("GEO.id2"="zip","NAICS.display.label"="industry","YEAR.id"="year",
"001"="all","212"="1_4","220"="5_9","230"="10_19","241"="20_49",
"242"="50_99","251"="100_249","252"="250_499","254"="500_999",
"260"="1000_more","262"="1000_1499","263"="1500_2499",
"271"="2500_4999","273"="5000_more"))
# import all business pattern data files
df <- lapply(Sys.glob("BP_*.csv"), read.csv(stringsAsFactors = FALSE))
# import all business pattern data files
df <- data.frame(lapply(Sys.glob("BP_*.csv"), read.csv), stringsAsFactors = FALSE)
# import all business pattern data files
df <- data.frame(lapply(Sys.glob("BP_*.csv"), read.csv)
)
# import all business pattern data files
df <- lapply(Sys.glob("BP_*.csv"), read.csv)
# merge into single file
df <- do.call(rbind.data.frame, df)
# remove rows with non-NYC zip codes and keep only relevant columns
df <- df[df$GEO.id2 %in% zip$V1, c(2,5,6,8,9)]
# convert rows to columns
df <- spread(df, EMPSZES.id, ESTAB)
# rename columns
df <- rename(df, c("GEO.id2"="zip","NAICS.display.label"="industry","YEAR.id"="year",
"001"="all","212"="1_4","220"="5_9","230"="10_19","241"="20_49",
"242"="50_99","251"="100_249","252"="250_499","254"="500_999",
"260"="1000_more","262"="1000_1499","263"="1500_2499",
"271"="2500_4999","273"="5000_more"))
a <- as.numeric(df[,!2])
# convert factor columns to numeric
columns <- colnames(df)
columns <- columns[-2]
a <- df[,columns] <- lapply(df[,columns], numeric)
df[,columns] <- lapply(df[,columns], numeric)
str(df)
# convert factor columns to numeric
columns <- c(-2)
# convert factor columns to numeric
columns <- colnames(df)
columns <- columns[-2]
df[,columns] <- lapply(df[,columns], numeric)
a <- lapply(df[,columns], numeric)
a <- lapply(df[,-2], numeric)
a <- lapply(df[,-2], as.numeric)
a <- as.data.frame(lapply(df[,-2], as.numeric))
View(a)
View(a)
# replace NAs with 0
a <- replace_na(df, 0)
# replace NAs with 0
df[is.na(df)] <- 0
#
names <- colnames(df)
names <- c(-2)
#
names <- colnames(df)
names <- names[-2]
df[names] <- lapply(df[names], as.numeric)
# import all business pattern data files
df <- lapply(Sys.glob("BP_*.csv"), read.csv)
# merge into single file
df <- do.call(rbind.data.frame, df)
# remove rows with non-NYC zip codes and keep only relevant columns
df <- df[df$GEO.id2 %in% zip$V1, c(2,5,6,8,9)]
# convert rows to columns
df <- spread(df, EMPSZES.id, ESTAB)
# rename columns
df <- rename(df, c("GEO.id2"="zip","NAICS.display.label"="industry","YEAR.id"="year",
"001"="all","212"="1_4","220"="5_9","230"="10_19","241"="20_49",
"242"="50_99","251"="100_249","252"="250_499","254"="500_999",
"260"="1000_more","262"="1000_1499","263"="1500_2499",
"271"="2500_4999","273"="5000_more"))
# replace NAs with 0
df[is.na(df)] <- 0
# export to csv
write.csv(df, file = "BP_clean.csv", row.names = FALSE)
# export to csv
write.csv(df, file = "~/Desktop/arts-vibrancy-index/arts-providers/BP_clean.csv", row.names = FALSE)
